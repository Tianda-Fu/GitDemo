<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-20T11:57:56 EDT" name="Game Categorys" finished-at="2023-10-20T11:57:56 EDT" duration-ms="36">
    <groups>
      <group name="smoke">
        <method signature="Test2.Forza()[pri:0, instance:Test.Test2@35aea049]" name="Forza" class="Test.Test2"/>
        <method signature="Test4.WebLoginHome()[pri:0, instance:Test.Test4@7205765b]" name="WebLoginHome" class="Test.Test4"/>
        <method signature="Test3.MobileSignOutRacing()[pri:0, instance:Test.Test3@d9345cd]" name="MobileSignOutRacing" class="Test.Test3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-10-20T11:57:56 EDT" name="Racing" finished-at="2023-10-20T11:57:56 EDT" duration-ms="36">
      <class name="Test.Test1">
        <test-method is-config="true" signature="AfSuite()[pri:0, instance:Test.Test1@f736069]" started-at="2023-10-20T11:57:56 EDT" name="AfSuite" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- Test.Test1 -->
      <class name="Test.Test3">
        <test-method is-config="true" signature="BfSuite()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfSuite" finished-at="2023-10-20T11:57:56 EDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfSuite -->
        <test-method is-config="true" signature="BfClass()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfClass" finished-at="2023-10-20T11:57:56 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfClass -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="MobileLoginRacing(java.lang.String,java.lang.String)[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="MobileLoginRacing" finished-at="2023-10-20T11:57:56 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.gran-turismo.com/us/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[114514]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginRacing -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="AfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method signature="MobileSignOutRacing()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="MobileSignOutRacing" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutRacing -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="AfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method signature="WebLoginRacing(java.lang.String,java.lang.String)[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="WebLoginRacing" data-provider="getData" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fristsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginRacing -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="WebLoginRacing(java.lang.String,java.lang.String)[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="WebLoginRacing" data-provider="getData" finished-at="2023-10-20T11:57:56 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusename]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginRacing -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="AfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="AfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
        <test-method is-config="true" signature="BfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="BfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfMethod -->
        <test-method signature="WebLoginRacing(java.lang.String,java.lang.String)[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="WebLoginRacing" data-provider="getData" finished-at="2023-10-20T11:57:56 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginRacing -->
        <test-method is-config="true" signature="AfMethod()[pri:0, instance:Test.Test3@d9345cd]" started-at="2023-10-20T11:57:56 EDT" name="AfMethod" finished-at="2023-10-20T11:57:56 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfMethod -->
      </class> <!-- Test.Test3 -->
    </test> <!-- Racing -->
    <test started-at="2023-10-20T11:57:56 EDT" name="Sports Games" finished-at="2023-10-20T11:57:56 EDT" duration-ms="36">
      <class name="Test.Test1">
        <test-method signature="Demo()[pri:0, instance:Test.Test1@f736069]" started-at="2023-10-20T11:57:56 EDT" name="Demo" finished-at="2023-10-20T11:57:56 EDT" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Test.Test1.Demo(Test1.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastoperation()[pri:0, instance:Test.Test1@f736069]" started-at="2023-10-20T11:57:56 EDT" name="lastoperation" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastoperation -->
      </class> <!-- Test.Test1 -->
      <class name="Test.Test2">
        <test-method is-config="true" signature="preprocessing()[pri:0, instance:Test.Test2@35aea049]" started-at="2023-10-20T11:57:56 EDT" name="preprocessing" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preprocessing -->
        <test-method signature="Forza()[pri:0, instance:Test.Test2@35aea049]" started-at="2023-10-20T11:57:56 EDT" name="Forza" finished-at="2023-10-20T11:57:56 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Forza -->
      </class> <!-- Test.Test2 -->
      <class name="Test.Test4">
        <test-method signature="LoginAPIHome()[pri:0, instance:Test.Test4@7205765b]" started-at="2023-10-20T11:57:56 EDT" name="LoginAPIHome" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHome -->
        <test-method signature="MobileLoginHome(java.lang.String)[pri:0, instance:Test.Test4@7205765b]" started-at="2023-10-20T11:57:56 EDT" name="MobileLoginHome" finished-at="2023-10-20T11:57:56 EDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.ea.com/games/ea-sports-fc/fc-24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHome -->
        <test-method signature="WebLoginHome()[pri:0, instance:Test.Test4@7205765b]" started-at="2023-10-20T11:57:56 EDT" name="WebLoginHome" finished-at="2023-10-20T11:57:56 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHome -->
      </class> <!-- Test.Test4 -->
    </test> <!-- Sports Games -->
  </suite> <!-- Game Categorys -->
</testng-results>
